name: Run server tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server

    services:
      postgres:
        image: pgvector/pgvector:pg15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry self add poetry-plugin-export

      - name: Build local plugins wheels
        run: |
          for dir in ../plugins/*; do
            if [ -d "$dir" ]; then
              (
                cd "$dir"
                poetry build -f wheel
              )
            fi
          done

      - name: Build plugins dependencies
        run: |
          pip install --no-index --find-links=../plugins/enthusiast-common/dist enthusiast-common
          for dir in ../plugins/*; do
            if [ -d "$dir" ]; then
              (
                cd "$dir"
                poetry lock
                poetry export -f requirements.txt --without-hashes -o requirements.txt
                python -m pip install --upgrade pip
                pip install -r requirements.txt
              )
            fi
          done

      - name: Install local plugins
        run: |
          python -m pip install --upgrade pip
          plugins_dist=$(find ../plugins -type d -name dist -exec printf -- '--find-links=%s ' {} \;)
          readarray -t plugins_names < <(find ../plugins -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
          pip install --no-index $plugins_dist "${plugins_names[@]}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare for tests
        run: cp sample.test.env .env

      - name: Run tests
        run: pytest
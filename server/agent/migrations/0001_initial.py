# Generated by Django 5.1.1 on 2024-10-11 11:51

import django.db.models.deletion
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0016_remove_conversation_model_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('dimensions', models.IntegerField(null=True)),
                ('user_name', models.CharField(default='user', max_length=50, null=True)),
                ('system_name', models.CharField(default='system', max_length=50, null=True)),
                ('data_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.dataset')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='conversation', to='catalog.embeddingmodel')),
            ],
            options={
                'db_table_comment': 'A conversation is a collection of various messages exchanged during one session. Messages are mostly questions and answers and have different actors such as end user asking question and ECL agent answering those questions.',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asked_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.TextField()),
                ('question_embedding', pgvector.django.vector.VectorField(null=True)),
                ('prompt_message', models.TextField(default=None, null=True)),
                ('answer', models.TextField(null=True)),
                ('answer_embedding', pgvector.django.vector.VectorField(null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='question', to='agent.conversation')),
            ],
            options={
                'db_table_comment': "A question is a collection of two messages: question itself followed by a system's answer.",
            },
        ),
        migrations.CreateModel(
            name='AnswerDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_title', models.CharField(max_length=1024)),
                ('cosine_distance', models.FloatField(null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answer_document', to='catalog.document')),
                ('document_embedding', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='answer_document', to='catalog.documentembedding')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answer_document', to='agent.conversation')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answer_document', to='agent.question')),
            ],
            options={
                'db_table': 'agent_answer_document',
                'db_table_comment': 'Document considered by our similarity search engine as relevant to the question. Documents from this table are used to formulate the answer.',
            },
        ),
    ]

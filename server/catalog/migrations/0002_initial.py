# Generated by Django 5.1.1 on 2024-12-18 19:41

import django.db.models.deletion
import pgvector.django.vector
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_install_pgvector'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('embedding_provider', models.CharField(default='OpenAI', max_length=255)),
                ('embedding_model', models.CharField(default='text-embedding-3-large', max_length=255)),
                ('embedding_vector_dimensions', models.IntegerField(default=512)),
                ('embedding_chunk_size', models.IntegerField(default=3000)),
                ('embedding_chunk_overlap', models.IntegerField(default=150)),
                ('users', models.ManyToManyField(related_name='data_sets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table_comment': "List of various data sets. One data set may be the whole company's content such as blog posts, or some part of it: a data set may be represent a brand or department.",
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=255, unique=True)),
                ('title', models.CharField(max_length=1024)),
                ('content', models.TextField()),
                ('data_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='catalog.dataset')),
            ],
            options={
                'db_table_comment': "List of documents being part of a larger data set. A document may be for instance a blog post. This is the main entity being analysed by ECL engine when user asks questions regarding company's offer.",
            },
        ),
        migrations.CreateModel(
            name='DocumentChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('embedding', pgvector.django.vector.VectorField(null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='catalog.document')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plugin_name', models.CharField()),
                ('config', models.JSONField(default=dict, null=True)),
                ('data_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='document_sources', to='catalog.dataset')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_id', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('sku', models.CharField(max_length=255)),
                ('properties', models.CharField(max_length=65535)),
                ('categories', models.CharField(max_length=65535)),
                ('price', models.FloatField()),
                ('data_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='catalog.dataset')),
            ],
            options={
                'db_table_comment': 'List of products from a given data set.',
            },
        ),
        migrations.CreateModel(
            name='ProductSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plugin_name', models.CharField()),
                ('config', models.JSONField(default=dict, null=True)),
                ('data_set', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_sources', to='catalog.dataset')),
            ],
        ),
    ]

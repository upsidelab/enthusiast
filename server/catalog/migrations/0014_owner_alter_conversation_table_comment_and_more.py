# Generated by Django 5.1.1 on 2024-10-10 14:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0013_question_prompt_message'),
    ]

    operations = [
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.AlterModelTableComment(
            name='conversation',
            table_comment='A conversation is a collection of various messages exchanged during one session. Messages are mostly questions and answers and have different actors such as end user asking question and ECL agent answering those questions.',
        ),
        migrations.AlterModelTableComment(
            name='dataset',
            table_comment="List of various data sets. One data set may be the whole company's content such as blog posts, or some part of it: a data set may be represent a brand or department.",
        ),
        migrations.AlterModelTableComment(
            name='document',
            table_comment="List of documents being part of a larger data set. A document may be for instance a blog post. This is the main entity being analysed by ECL engine when user asks questions regarding company's offer.",
        ),
        migrations.AlterModelTableComment(
            name='documentembedding',
            table_comment="Embedding vectors collected for one document. One document may have several different embedding vectors which have different dimensions. Agent processing user's questions chooses the best vector for the purpose",
        ),
        migrations.AlterModelTableComment(
            name='embeddingdimension',
            table_comment="Lengths of embedding vector that are collected from OpenAI for documents or products. For one item we may collect multiple embedding vectors of different lengths. Note: all dimensions from this table will be collected when action 'reload all embeddings' is performed by admin.",
        ),
        migrations.AlterModelTableComment(
            name='embeddingmodel',
            table_comment="Models used to create embedding vectors. Note: all models from this table will be used when action 'reload all embeddings' is performed by admin.",
        ),
        migrations.AlterModelTableComment(
            name='product',
            table_comment="List of a company's products.",
        ),
        migrations.AlterModelTableComment(
            name='question',
            table_comment="A question is a collection of two messages: question itself followed by a system's answer.",
        ),
        migrations.AlterField(
            model_name='answerdocument',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answer_document', to='catalog.conversation'),
        ),
        migrations.AlterField(
            model_name='answerdocument',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answer_document', to='catalog.document'),
        ),
        migrations.AlterField(
            model_name='answerdocument',
            name='document_embedding',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='answer_document', to='catalog.documentembedding'),
        ),
        migrations.AlterField(
            model_name='answerdocument',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answer_document', to='catalog.question'),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='model',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='conversation', to='catalog.embeddingmodel'),
        ),
        migrations.AlterField(
            model_name='document',
            name='data_set',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='document', to='catalog.dataset'),
        ),
        migrations.AlterField(
            model_name='documentembedding',
            name='document',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='embedding', to='catalog.document'),
        ),
        migrations.AlterField(
            model_name='documentembedding',
            name='model',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.embeddingmodel'),
        ),
        migrations.AlterField(
            model_name='embeddingmodel',
            name='code',
            field=models.CharField(max_length=5, null=True),
        ),
        migrations.AlterField(
            model_name='embeddingmodel',
            name='name',
            field=models.CharField(max_length=30, unique=True),
        ),
        migrations.AlterField(
            model_name='product',
            name='company_code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.dataset'),
        ),
        migrations.AlterField(
            model_name='question',
            name='conversation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='question', to='catalog.conversation'),
        ),
        migrations.AlterModelTable(
            name='dataset',
            table='ecl_data_set',
        ),
        migrations.AlterModelTable(
            name='documentembedding',
            table='ecl_document_embedding',
        ),
        migrations.AlterModelTable(
            name='embeddingdimension',
            table='ecl_embedding_dimension',
        ),
        migrations.AlterModelTable(
            name='embeddingmodel',
            table='ecl_embedding_model',
        ),
        migrations.AddField(
            model_name='dataset',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='data_set', to='catalog.owner'),
        ),
    ]
